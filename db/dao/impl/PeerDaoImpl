package com.iit.cao.pa3.database.Impl;

import com.iit.cao.pa3.database.bean.Peer;
import com.iit.cao.pa3.database.dao.BaseDAO;
import com.iit.cao.pa3.database.dao.PeerDao;

import java.sql.Connection;
import java.util.List;

public class PeerDaoImpl extends BaseDAO<Peer> implements PeerDao {

    @Override
    public void insert(Connection conn, Peer peer) {
        String sql = "insert into peer(peerId, peerName, fileName, filePath, fileSize, version, type, state, lifeCycle) " +
                "values(?,?,?,?,?,?,?,?,?)";
        update(conn, sql, peer.getPeerId(), peer.getPeerName(), peer.getFileName(), peer.getFilePath(),
                peer.getFileSize(), peer.getVersion(), peer.getType(), peer.getState(), peer.getLifeCycle());
    }

    @Override
    public void deleteById(Connection conn, int id) {
        String sql = "delete from peer where id = ?";
        update(conn, sql, id);
    }

    @Override
    public void update(Connection conn, Peer peer) {
        String sql = "update peer set fileSize=?, version=?, state=?, lifeCycle=? " +
                "where peerId=? and peerName=? and fileName=? and filePath=?";
        update(conn, sql, peer.getFileSize(), peer.getVersion(), peer.getState(), peer.getLifeCycle(),
                peer.getPeerId(), peer.getPeerName(), peer.getFileName(), peer.getFilePath());
    }

    @Override
    public void deleteByServerNameAndPeerId(Connection conn, String serverName, Integer peerId) {
        String sql = "delete from peer where peerName=? and peerId=?";
        update(conn, sql, serverName, peerId);
    }

    @Override
    public Peer getPeerByID(Connection conn, int id) {
        String sql = "select * from peer where id = ?";
        Peer peer;
        peer = getInstance(conn, sql, id);
        return peer;
    }

    @Override
    public List<Peer> getAll(Connection conn) {
        String sql = "select * from peer";
        List<Peer> list = getForList(conn, sql);
        return list;
    }

    @Override
    public List<Peer> getPeerByFileName(Connection conn, String name) {
        String sql = "select * from peer where fileName = ?";
        List<Peer> list = getForList(conn, sql, name);
        //System.out.println(list);
        return list;
    }

    @Override
    public List<Peer> getPeerByFileNameAndSeverName(Connection conn, String serverName, String fileName) {
        String sql = "select * from peer where peerName =? and fileName = ?";
        System.out.println(serverName);
        System.out.println(fileName);
        return getForList(conn, sql, serverName, fileName);
    }

    @Override
    public Peer getOriginalPeer(Connection conn, Peer peer) {
        String sql = "select * from peer where peerId=? and peerName=? and fileName=? and filePath=?";
        return getInstance(conn, sql, peer.getPeerId(), peer.getPeerName(), peer.getFileName(), peer.getFilePath());
    }

    @Override
    public List<Peer> getPeerByPeerIdAndFileName(Connection conn, Integer peerId, String fileName) {
        String sql = "select * from peer where peerId=? and fileName=?";
        return getForList(conn, sql, peerId, fileName);
    }

    @Override
    public Peer getPeerByFileNameAndType(Connection conn, String fileName, String type) {
        String sql = "select * from peer where fileName=? and type=?";
        return getInstance(conn, sql, fileName, type);
    }

    @Override
    public List<Peer> getPeerListInSameVersion(Connection conn, Integer peerId, String serverName, String fileName, Integer version) {
        String sql = "select * from peer where peerId=? and peerName=? and fileName=? and version<=?";
        return getForList(conn, sql, peerId, serverName, fileName, version);
    }

    @Override
    public Peer getPeerByFileNameAndPeerId(Connection conn, String fileName, int peerId) {
        String sql = "select * from peer where fileName=? and peerId=?";
        Peer newPeer = getInstance(conn, sql, fileName, peerId);
        return newPeer;
    }
}
