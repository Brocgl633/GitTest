package com.iit.cao.pa3;

import com.iit.cao.pa3.client.WeakPeerClient;
import com.iit.cao.pa3.pojo.Node;
import com.iit.cao.pa3.utils.YamlUtil;

import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class ClientApplication {

    private static final List<Node> weakPeerNodeList = new ArrayList<>();

    public static void main(String[] args) throws InterruptedException {
        Scanner input = new Scanner(System.in);
        readConfig();
        while (true) {
            System.out.print("Choose one weak peer : ");
            String leafNodeName = input.next();
            for (Node node : weakPeerNodeList) {
                if (node.getNodeName().equals(leafNodeName)) {
                    WeakPeerClient client = new WeakPeerClient(node.getNodeName(), node.getLinkNodeList());
                    System.out.println(client);
                    client.start();
                    client.join();
                }
            }
        }
    }

    private static void readConfig() {
        for (int i = 1; i <= 27; i++) {
            Node weakPeerNode = new Node();
            String key = "WeakPeer#V" + i;
            String ip = (String) YamlUtil.getInstance().getValue(key, "ip");
            Integer serverPort = (Integer) YamlUtil.getInstance().getValue(key, "serverPort");
            Integer clientPort = (Integer) YamlUtil.getInstance().getValue(key, "clientPort");
            Object links = YamlUtil.getInstance().getValue(key, "linkNodes");
            List<Node> nodes = YamlUtil.transferMapToObject(links);
            weakPeerNode.setIp(ip);
            weakPeerNode.setClientPort(clientPort);
            weakPeerNode.setNodeName(key);
            weakPeerNode.setServerPort(serverPort);
            weakPeerNode.setLinkNodeList(nodes);
            weakPeerNodeList.add(weakPeerNode);
        }
    }
}
